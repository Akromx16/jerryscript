# Copyright 2014-2015 Samsung Electronics Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# use TAB-8

CURDIR     = `pwd`
ESP_SDK_PATH ?= $(SDK_PATH)
ESP_INC    = $(ESP_SDK_PATH)/extra_include
ESP_INC2   = $(ESP_SDK_PATH)/include
ESP_LIB    = $(ESP_SDK_PATH)/lib
TYPE       = release
INTERM     = build/obj-esp8266
OUTPUT     = build/bin/$(TYPE).esp8266
COPYTARGET = embedding/esp8266/libs

ESP_CFLAGS = "-D__TARGET_ESP8266 -Wl,-EL -fno-inline-functions -ffunction-sections -fdata-sections -mlongcalls -mtext-section-literals -mno-serialize-volatile"

ESP_LIBS_INC = "$(CURDIR)/embedding/esp8266/include;$(ESP_INC2);$(ESP_INC2)/espressif;$(ESP_INC2)/freertos;$(ESP_INC2)/json;$(ESP_INC2)/lwip;$(ESP_INC2)/ssl"


all: check-env
	mkdir -p $(INTERM)
	mkdir -p $(OUTPUT)
	mkdir -p $(COPYTARGET)
	cmake -B$(INTERM) -H./ \
          -DENABLE_LTO=OFF \
          -DENABLE_VALGRIND=OFF \
          -DCMAKE_TOOLCHAIN_FILE=build/configs/toolchain_external.cmake \
          -DEXTERNAL_CMAKE_SYSTEM_PROCESSOR=xtensia-lx106 \
          -DEXTERNAL_CMAKE_C_COMPILER=xtensa-lx106-elf-gcc \
          -DEXTERNAL_CMAKE_CXX_COMPILER=xtensa-lx106-elf-g++ \
          -DEXTERNAL_BUILD_ENTRY_FILE=./embedding/esp8266/binding/jerry-esp8266.cpp \
          -DEXTERNAL_COMPILE_FLAGS=$(ESP_CFLAGS) \
          -DEXTERNAL_LIBC_INTERFACE=$(ESP_INC) \
          -DEXTERNAL_LIBS_INTERFACE=$(ESP_LIBS_INC) \
          -DEXTERNAL_MEM_HEAP_SIZE_KB=20

	make -C $(INTERM) $(TYPE).external
	cp `cat $(INTERM)/$(TYPE).external/list` $(OUTPUT)/.
	cp $(OUTPUT)/lib$(TYPE).jerry-core.a $(COPYTARGET)/libjerrycore.a
	cp $(OUTPUT)/lib$(TYPE).jerry-fdlibm.third_party.lib.a $(COPYTARGET)/libfdlibm.a
	cp $(INTERM)/lib$(TYPE).external-entry.a $(OUTPUT)/.
	cp $(OUTPUT)/lib$(TYPE).external-entry.a $(COPYTARGET)/libjerryentry.a

	cd embedding/esp8266; ./js2c.py; BOOT=new APP=0 SPI_SPEED=80 SPI_MODE=QIO SPI_SIZE_MAP=1 make

#          -DESP8266_MEM_HEAP_SIZE_KB=20\
#          -DEXTERNAL_BUILD_ENTRY=TRUE \
#          -DCMAKE_TOOLCHAIN_FILE=build/configs/toolchain_esp8266.cmake
#          -DUSE_COMPILER_DEFAULT_LIBC=YES \
#          -DEXTERNAL_PORT=esp8266 \
#	cp $(OUTPUT)/librelease.jerry-libc.esp8266.lib.a $(COPYTARGET)/libjerryc.a
#	make -C $(OUTPUT) release.external
#	cp `cat $(OUTPUT)/release.external/list` $(OUTPUT)/.
#	make -C $(OUTPUT) debug.external
#	cp `cat $(OUTPUT)/debug.external/list` $(OUTPUT)/.

check-env:
ifndef SDK_PATH
	$(error SDK_PATH is undefined for ESP8266)
endif
ifndef BIN_PATH
	$(error BIN_PATH is undefined for ESP8266)
endif

clean:
	rm -rf $(INTERM)
	rm -rf $(OUTPUT)
